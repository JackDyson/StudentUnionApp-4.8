@{
    ViewBag.Title = "Students";
}

<main>
    <div class="row">
        <section class="col-md-12" aria-labelledby="gettingStartedTitle">
            <div class="card">
                <div class="card-body">
                    <div class="row sticky dt-header-row" style="background-color: var(--card-bg)">
                        <div class="col-md-4 d-flex justify-content-between mt-2 mb-2">
                            <button id="filter" class="btn btn-primary" data-bs-toggle="offcanvas" data-bs-target="#filterOffCanvas" aria-controls="filterOffCanvas">Filter</button>
                            <button id="add" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addModal">Add</button>
                            <button id="edit" class="btn btn-primary">Edit</button>
                        </div>
                        <div class="col-md-4 mt-2 mb-2">
                            <input type="text" id="search" class="form-control" placeholder="Search" />
                        </div>
                        <div class="col-md-4 d-flex justify-content-between mt-2 mb-2">
                            <button id="export" class="btn btn-primary">Export</button>
                            <button id="upload" class="btn btn-primary">Upload</button>
                            <button id="emailBtn" class="btn btn-primary">Email</button>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <table id="test-table" class="w-100 dataTable nowrap">
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</main>

<!-- Filters -->
<div class="offcanvas offcanvas-start" tabindex="-1" id="filterOffCanvas" aria-labelledby="offcanvasExampleLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasExampleLabel">Filter</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="mb-3">
            Select the filters you would like to apply:
        </div>
        <div class="row">
            <div class="col-12">
                <div id="filterContainer" class="row">

                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal modal-lg fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Student: <span id="studentName"></span></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row form-container">
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label class="control-label" for="edit-clubName">Club Name</label>
                            <select class="form-select" id="edit-clubName">
                                <option value="none">Select A Club</option>
                            </select>                        
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label class="control-label" for="edit-position">Position</label>
                            <select class="form-select" id="edit-position">
                                <option value="none">Select A Position</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label class="control-label" for="edit-name">Name</label>
                            <input class="form-control"  id="edit-name" type="text">
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label class="control-label" for="edit-prefName">Preferred Name</label>
                            <input class="form-control"  id="edit-prefName" type="text">
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label class="control-label" for="edit-phoneNum">Phone Number</label>
                            <input class="form-control"  id="edit-phoneNum" type="text">
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label class="control-label" for="edit-email">Email Address</label>
                            <input class="form-control"  id="edit-email" type="text">
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="d-flex align-items-center float-end">
                            <label class="form-check-label" for="edit-agreement">Agreement Signed:</label>
                            <input id="edit-agreement" type="checkbox" class="form-check" style="margin-left: 10px; margin-top: 2px;" />
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="d-flex align-items-center float-end">
                            <label class="form-check-label" for="edit-training">Training Complete:</label>
                            <input id="edit-training" type="checkbox" class="form-check" style="margin-left: 10px; margin-top: 2px;" />
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="d-flex align-items-center float-end">
                            <label class="form-check-label" for="edit-membership">Membership Purchased:</label>
                            <input id="edit-membership" type="checkbox" class="form-check" style="margin-left: 10px; margin-top: 2px;" />
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="d-flex align-items-center float-end">
                            <label class="form-check-label" for="edit-food">Food Certified:</label>
                            <input id="edit-food" type="checkbox" class="form-check" style="margin-left: 10px; margin-top: 2px;" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="saveEditModal" type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Modal -->
<div class="modal modal-lg fade" id="addModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addModalLabel">Add Student</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row form-container">
                    <div class="col-lg-6">
                        @*<div class="form-group">
                            <label class="control-label" for="clubName">Club Name</label>
                            <input class="form-control" id="clubName" type="text">
                        </div>*@
                        <div class="form-group">
                            <label class="control-label" for="clubName">Club Name</label>
                            <select class="form-select" id="clubName">
                                <option value="none">Select A Club</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        @*<div class="form-group">
                            <label class="control-label" for="position">Position</label>
                            <input class="form-control" id="position" type="text">
                        </div>*@
                        <div class="form-group" >
                            <label class="control-label" for="position">Position</label>
                            <select class="form-select" id="position">
                                <option value="none">Select A Position</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label class="control-label" for="name">Name</label>
                            <input class="form-control" id="name" type="text">
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label class="control-label" for="prefName">Preferred Name</label>
                            <input class="form-control" id="prefName" type="text">
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label class="control-label" for="phoneNum">Phone Number</label>
                            <input class="form-control" id="phoneNum" type="text">
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label class="control-label" for="email">Email Address</label>
                            <input class="form-control" id="email" type="text">
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="d-flex align-items-center float-end">
                            <label class="form-check-label" for="agreement">Agreement Signed:</label>
                            <input id="agreement" type="checkbox" class="form-check" style="margin-left: 10px; margin-top: 2px;" />
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="d-flex align-items-center float-end">
                            <label class="form-check-label" for="training">Training Complete:</label>
                            <input id="training" type="checkbox" class="form-check" style="margin-left: 10px; margin-top: 2px;" />
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="d-flex align-items-center float-end">
                            <label class="form-check-label" for="membership">Membership Purchased:</label>
                            <input id="membership" type="checkbox" class="form-check" style="margin-left: 10px; margin-top: 2px;" />
                        </div>
                    </div>
                    <div class="col-xl-6">
                        <div class="d-flex align-items-center float-end">
                            <label class="form-check-label" for="food">Food Certified:</label>
                            <input id="food" type="checkbox" class="form-check" style="margin-left: 10px; margin-top: 2px;" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="saveAddModal" type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Email Modal -->
<div class="modal modal-lg fade" id="emailModal" tabindex="-1" aria-labelledby="emailModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="emailModalLabel">Email Selected Students</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row form-container">
                    <div class="col-12">
                        <div class="form-group">
                            <label class="form-label" for="email-template">Template</label>
                            <select class="form-select" id="email-template">
                                <option value="none">Select A Template</option>
                            </select>
                        </div>
                        <div class="col-12">
                            <label>Students Selected: <span id="selected-students-count"></span></label>
                        </div>
                        <div class="col-12">
                            <label for="email-preiview">Preiview</label>
                            <textarea class="form-control" id="email-preview" rows="8" disabled></textarea>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="sendEmail" type="button" class="btn btn-primary">Send Email</button>
            </div>
        </div>
    </div>
</div>

<!-- Upload Modal -->
<div class="modal modal-lg fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadModalLabel">Upload Students</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12">
                        <div class="text-center">
                            <button class="btn btn-primary" id="downloadTemplate">Download Template</button>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="form-group">
                            <label class="form-label" for="uploadFile">Upload Excel File</label>
                            <input type="file" class="form-control" id="uploadFile" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="uploadStudents" type="button" class="btn btn-primary">Upload Students</button>                
            </div>            
        </div>        
    </div>    
</div>

@section scripts {
    <script>
        var societyList = [];
        var positionList = [];
        var table;
        $(document).ready(function () {
            // #region Scocieties and Positions
            // Get the list of societies
            $.ajax({
                url: '/Student/GetSocietyList',
                type: 'GET',
                success: function (data) {
                    societyList = data;
                    // add societies to the filter off canvas and selects
                    if (societyList.length > 0) {
                        $('#filterContainer')
                            .append(`<div class="col-12">
                                        <label>Societies:</label>
                                     </div>`)
                    }
                    societyList.forEach(function (society) {
                        $('#filterContainer')
                            .append(`<div class="col-12">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" value="${society.Society_Name}" id="${society.Society_Name}">
                                            <label class="form-check-label" for="${society.Society_Name}">${society.Society_Name}</label>
                                        </div>
                                    </div>`);

                        $('#clubName').append(`<option value="${society.Society_Name}">${society.Society_Name}</option>`);
                        $('#edit-clubName').append(`<option value="${society.Society_Name}">${society.Society_Name}</option>`);
                    });

                    // Get the list of positions
                    $.ajax({
                        url: '/Student/GetPositionList',
                        type: 'GET',
                        success: function (data) {
                            positionList = data;
                            // add positions to the filter off canvas and selects
                            if (positionList.length > 0) {
                                $('#filterContainer')
                                    .append(`<div class="col-12">
                                                <label>Positions:</label>
                                             </div>`)
                            }
                            positionList.forEach(function (position) {
                                $('#filterContainer')
                                    .append(`<div class="col-12">
                                                <div class="form-check">
                                                    <input class="form-check-input" type="checkbox" value="${position.Position_Name}" id="${position.Position_Name}">
                                                    <label class="form-check-label" for="${position.Position_Name}">${position.Position_Name}</label>
                                                </div>
                                             </div>`);

                                $('#position').append(`<option value="${position.Position_Name}">${position.Position_Name}</option>`);
                                $('#edit-position').append(`<option value="${position.Position_Name}">${position.Position_Name}</option>`);
                            });
                        }
                    });
                }
            });
            // #endregion
            // Add actionables items to the filter list (Agreement, Training, Membership and Food)
            $('#filterContainer')
                .append(`<div class="col-12">
                                <label>Actionables:</label>
                             </div>`)
                .append(`<div class="col-12">
                                <input class="form-check-input" type="checkbox" value="Agreement" id="Agreement-filter">
                                <label class="form-check-label" type="checkbox" value="Agreement" for="Agreement-filter">No Agreement Signed</label>
                            </div>`)
                .append(`<div class="col-12">
                                <input class="form-check-input" type="checkbox" value="Training" id="Training-filter">
                                <label class="form-check-label" type="checkbox" value="Training" for="Training-filter">Training Incomplete</label>
                            </div>`)
                .append(`<div class="col-12">
                                <input class="form-check-input" type="checkbox" value="Membership" id="Membership-filter">
                                <label class="form-check-label" type="checkbox" value="Membership" for="Membership-filter">No Membership Purchased</label>
                            </div>`)
                .append(`<div class="col-12">
                                <input class="form-check-input" type="checkbox" value="Food" id="Food-filter">
                                <label class="form-check-label" type="checkbox" value="Food" for="Food-filter">Not Food Certified</label>
                            </div>`);

            // Get list of email templates
            $.ajax({
                url: '/Student/GetEmailTemplates',
                type: 'GET',
                success: function (data) {
                    console.log(data)
                    data.forEach(function (template) {
                        $('#email-template').append(`<option value="${template.ID}" data-email-body="${template.Email_Content}">${template.Title}</option>`);
                    });
                }
            });

            // Initialize the DataTable
            table = $('#test-table').DataTable({ // Initialize DataTable on your table
                "ajax": {
                    "url": '/Student/GetStudents', // The URL to the server-side data
                    "dataSrc": "", // Assuming the returned data is an array at the root level
                    "type": "GET", // Method type
                    "dataType": 'json' // Data type expected from the server
                },
                "dom": 'Bt', // Add the buttons to the DOM
                "buttons": [ // Define the buttons
                    {
                        extend: 'excelHtml5', // Extend the buttons
                        text: 'Export', // Button text
                        className: 'btn btn-success', // Button class
                        title: '', // Title of the Excel file
                        exportOptions: {
                            columns: [1, 2, 4, 5, 7, 8, 9, 10, 11, 12], // Columns to export
                            format: {
                                body: function (data, row, column, node) {
                                    // Check for icons and replace with TRUE or FALSE
                                    if (data.indexOf('uis-check-circle') > -1) {
                                        return 'TRUE';
                                    } else if (data.indexOf('uis-times-circle') > -1) {
                                        return 'FALSE';
                                    }
                                    return data;
                                }
                            }
                        },
                        filename: 'HSU-Test-Data' // File name
                    }
                ],
                "serverSide": false, // Server-side processing
                "order": [[0, "asc"]], // Initial sorting column
                "paging": false, // Enable paging
                "searching": true, // Enable searching
                "columnDefs": [
                    { "title": "Club", targets: 0 },
                    { "title": "Club Name", "targets": 1 },
                    { "title": "Position", "targets": 2 },
                    { "title": "Name", "targets": 3 },
                    { "title": "Student Name", targets: 4 },
                    { "title": "Pref. Name", "targets": 5 },
                    { "title": "Contact", "targets": 6 },
                    { "title": "Phone", "targets": 7 },
                    { "title": "Email", "targets": 8 },
                    { "title": "Agreement", "targets": 9 },
                    { "title": "Training", "targets": 10 },
                    { "title": "Membership", "targets": 11 },
                    { "title": "Food", "targets": 12 },
                    { "title": "Students", "targets": 13 },
                    { "title": "", "targets": 14 },
                    { "className": "text-center", "targets": [9, 10, 11, 12] },
                    { "visible": false, "targets": getColumnsToHide() }
                ],
                "columns": [ // Define columns and map them to data source properties
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return `<label>Club: </label> <text class="float-end">${row.Club_Name}</text></br>
                                    <label>Position: </label><text class="float-end">${row.Position}</text>`;
                        },
                        width: '250px'
                    },
                    { "data": "Club_Name" },
                    { "data": "Position" },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return `<label>Name: </label> <text class="float-end">${row.Student_Name}</text></br>
                                    <label>Pref: </label><text class="float-end">${row.Preferred_Name}</text>`;
                        }
                    },
                    { "data": "Student_Name" },
                    { "data": "Preferred_Name" },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return `<label>Phone: </label><text class="float-end">${row.Phone_Number}</text></br>
                                    <label>Email: </label><text class="float-end">${row.Email_Address}</text>`;
                        }
                    },
                    { "data": "Phone_Number" },
                    { "data": "Email_Address" },
                    {
                        "data": "Agreement_Signed",
                        render: function (data) {
                            return convToIcon(data);
                        }
                    },
                    {
                        "data": "Training_Complete",
                        render: function (data) {
                            return convToIcon(data);
                        }
                    },
                    {
                        "data": "Membership_Purchased",
                        render: function (data) {
                            return convToIcon(data);
                        }
                    },
                    {
                        "data": "Food_Certified",
                        render: function (data) {
                            return convToIcon(data);
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return `<div class="row">
                                        <div class="col-12">
                                            <div class="row">
                                                <div class="col-6">
                                                    <label>Club: </label>
                                                    <text >${row.Club_Name}</text>
                                                </div>
                                                <div class="col-6" style="text-align: end">
                                                    <label style="position: relative; bottom: 8px">Agreement: </label>
                                                    <text  style="position: relative; bottom: 5px">${convToIcon(row.Agreement_Signed)}</text>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-6">
                                                    <label>Position: </label>
                                                    <text>${row.Position}</text>
                                                </div>
                                                <div class="col-6" style="text-align: end">
                                                    <label style="position: relative; bottom: 8px">Training: </label>
                                                    <text  style="position: relative; bottom: 5px">${convToIcon(row.Training_Complete)}</text>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-6">
                                                    <label>Name: </label>
                                                    <text>${row.Student_Name}</text>
                                                </div>
                                                <div class="col-6" style="text-align: end">
                                                    <label style="position: relative; bottom: 8px">Membership: </label>
                                                    <text  style="position: relative; bottom: 5px">${convToIcon(row.Membership_Purchased)}</text>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-6">
                                                    <label>Phone: </label>
                                                    <text >${row.Phone_Number}</text>
                                                </div>
                                                <div class="col-6" style="text-align: end">
                                                    <label style="position: relative; bottom: 8px">Food: </label>
                                                    <text  style="position: relative; bottom: 5px">${convToIcon(row.Food_Certified)}</text>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-12">
                                                    <label>Email: </label>
                                                    <text>${row.Email_Address}</text>
                                                </div>
                                        </div>`
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            var returnString = '';
                            if (row.Agreement_Signed === false) {
                                returnString += 'Agreement Not Signed '
                            }
                            if (row.Training_Complete === false) {
                                returnString += 'Training Incomplete '
                            }
                            if (row.Membership_Purchased === false) {
                                returnString += 'Membership Not Purchased '
                            }
                            if (row.Food_Certified === false) {
                                returnString += 'Not Food Certified '
                            }
                            return returnString;
                        }
                    }
                ]
            });
        });

        $(document).on("click", "tbody tr", function (e) {
            $(e.target).closest('tr').toggleClass('clicked');
        });

        $(document).on("click", "#export", function () {
            table.button('.buttons-excel').trigger();
        });

        $(document).on("keyup change", "#search", function () {
            table.search($(this).val()).draw();
        });

        $(document).on("click", "#add", function () {
            $('#addModal').modal('show');
        });
        
        $(document).on("click", "#saveAddModal", function () {
            // Check if the clubName and position are set
            if ($('#clubName option:selected').val() === 'none' || $('#position option:selected').val() === 'none') {
                alert('Please select a club and position');
                return;
            }
            // Update the database
            $.ajax({
                url: '/Student/AddStudent',
                type: 'POST',
                data: {
                    clubName: $('#clubName option:selected').text(),
                    position: $('#position option:selected').text(),
                    studentName: $('#name').val(),
                    preferredName: $('#prefName').val(),
                    phoneNumber: $('#phoneNum').val(),
                    emailAddress: $('#email').val(),
                    agreementSigned: $('#agreement').is(':checked'),
                    trainingComplete: $('#training').is(':checked'),
                    membershipPurchased: $('#membership').is(':checked'),
                    foodCertified: $('#food').is(':checked')
                },
                success: function (data) {
                    $('#addModal').modal('hide');
                    table.ajax.reload();
                }
            });
        });

        var selectedStudents = [];
        // open the edit modal and grab a list of all selected students when the edit button is clicked
        $(document).on("click", "#edit", function () {
            selectedStudents = table.rows('.clicked').data();
            if (selectedStudents.length === 0) {
                alert('Please select a student to edit');
                return;
            }

            $('#editModal').modal('show');
            $('#studentName').text(selectedStudents[0].Student_Name);
            $('#edit-clubName').val(selectedStudents[0].Club_Name).trigger('change');
            $('#edit-position').val(selectedStudents[0].Position).trigger('change');
            $('#edit-name').val(selectedStudents[0].Student_Name);
            $('#edit-prefName').val(selectedStudents[0].Preferred_Name);
            $('#edit-phoneNum').val(selectedStudents[0].Phone_Number);
            $('#edit-email').val(selectedStudents[0].Email_Address);
            $('#edit-agreement').prop('checked', selectedStudents[0].Agreement_Signed);
            $('#edit-training').prop('checked', selectedStudents[0].Training_Complete);
            $('#edit-membership').prop('checked', selectedStudents[0].Membership_Purchased);
            $('#edit-food').prop('checked', selectedStudents[0].Food_Certified);
        });

        // When you save the changes made in the edit modal update the database and move on to the next item in the selectedStudents list
        $(document).on("click", "#saveEditModal", function () {
            // check if the clubName and position are set
            if ($('#edit-clubName option:selected').val() === 'none' || $('#edit-position option:selected').val() === 'none') {
                alert('Please select a club and position');
                return;
            }
            $.ajax({
                url: '/Student/UpdateStudent',
                type: 'POST',
                data: {
                    id: selectedStudents[0].Student_ID,
                    clubName: $('#edit-clubName option:selected').text(),
                    position: $('#edit-position option:selected').text(),
                    studentName: $('#edit-name').val(),
                    preferredName: $('#edit-prefName').val(),
                    phoneNumber: $('#edit-phoneNum').val(),
                    emailAddress: $('#edit-email').val(),
                    agreementSigned: $('#edit-agreement').is(':checked'),
                    trainingComplete: $('#edit-training').is(':checked'),
                    membershipPurchased: $('#edit-membership').is(':checked'),
                    foodCertified: $('#edit-food').is(':checked')
                },
                success: function (data) {
                    selectedStudents.shift();
                    if (selectedStudents.length === 0) {
                        $('#editModal').modal('hide');
                        table.ajax.reload();
                    }
                    else {
                        $('#studentName').text(selectedStudents[0].Student_Name);
                        $('#edit-clubName').val(selectedStudents[0].Club_Name).trigger('change');
                        $('#edit-position').val(selectedStudents[0].Position).trigger('change');
                        $('#edit-name').val(selectedStudents[0].Student_Name);
                        $('#edit-prefName').val(selectedStudents[0].Preferred_Name);
                        $('#edit-phoneNum').val(selectedStudents[0].Phone_Number);
                        $('#edit-email').val(selectedStudents[0].Email_Address);
                        $('#edit-agreement').prop('checked', selectedStudents[0].Agreement_Signed);
                        $('#edit-training').prop('checked', selectedStudents[0].Training_Complete);
                        $('#edit-membership').prop('checked', selectedStudents[0].Membership_Purchased);
                        $('#edit-food').prop('checked', selectedStudents[0].Food_Certified);
                    }
                }
            });
        });

        // link the filter checkboxes to the DataTable
        $(document).on("change", "#filterContainer .form-check-input", function () {
            var filters = [];
            var actionableFilters = [];
            $('#filterContainer .form-check-input').each(function () {
                if ($(this).is(':checked')) {
                    if ($(this).val() === 'Agreement') {
                        actionableFilters.push('Agreement Not Signed');
                    }
                    else if ($(this).val() === 'Training') {
                        actionableFilters.push('Training Incomplete');
                    }
                    else if ($(this).val() === 'Membership') {
                        actionableFilters.push('Membership Not Purchased');
                    }
                    else if ($(this).val() === 'Food') {
                        actionableFilters.push('Not Food Certified');
                    }
                    else {
                        filters.push($(this).val());
                    }
                }
            });
            table.column(14).search(actionableFilters.join('|'), true, false).draw();
            table.search(filters.join('|'), true, false).draw();
        });

        // when you click the send email button open the email modal
        $(document).on("click", "#emailBtn", function () {
            selectedStudents = table.rows('.clicked').data();
            if (selectedStudents.length === 0) {
                alert('Please select a student to email');
                return;
            }
            // display the number of selected students in the email modal
            $('#selected-students-count').text(selectedStudents.length);
            $('#emailModal').modal('show');
        });

        // when you select a template update the preview text area
        $(document).on("change", "#email-template", function () {
            // if the value of the option is none, reset the text area and return
            if ($('#email-template option:selected').val() === 'none') {
                $('#email-preview').val('');
                return;
            }
            var template = $('#email-template option:selected').attr('data-email-body');
            $('#email-preview').val(replaceTemplate(template, selectedStudents[0]));
        });

        // when you click the send email button, pass the selected students and the template to the server
        $(document).on("click", "#sendEmail", function () {
            // if the value of the optiobn is none, alert the user and return
            if ($('#email-template option:selected').val() === 'none') {
                alert('Please select a template');
                return;
            }
            var students = [];
            selectedStudents.each(function (student) {
                students.push(student);
            });
            $.ajax({
                url: '/Student/SendEmailToStudents',
                type: 'POST',
                data: {
                    students: students,
                    templateID: $('#email-template option:selected').val()
                },
                success: function (data) {
                    console.log(data);
                    $('#emailModal').modal('hide');
                }
            });
        });

        // when you click the upload button open the upload modal
        $(document).on("click", "#upload", function () {
            $('#uploadModal').modal('show');
        });

        // when you click the download template button, download the template
        $(document).on("click", "#downloadTemplate", function () {
            window.location.href = '/Student/DownloadTemplate';
        });

        // when you click the upload students button, upload the students
        $(document).on("click", "#uploadStudents", function () {
            var file = $('#uploadFile')[0].files[0];
            var reader = new FileReader();

            reader.onload = function (e) {
                var base64String = e.target.result.split(',')[1];
                $.ajax({
                    url: '/Student/UploadStudents',
                    type: 'POST',
                    data: { file: base64String },
                    success: function (response) {
                        console.log(response)
                        alert(response.Data.message);
                        // reload the entire page
                        location.reload();
                    },
                    error: function (xhr, status, error) {
                        console.log(error)
                        alert('An error occurred while uploading the file');
                    }
                });
            };

            reader.readAsDataURL(file);
        });

        // when you click the download template link, download the template
        $(document).on("click", "#downloadTemplateLink a", function () {
            window.location.href = '/Student/DownloadTemplate';
        });


        // function that replaces all instances of [Name], [Prefferred_Name] [Club] and [Position] with the appropriate values
        function replaceTemplate(template, student) {
            return template.replaceAll('[Name]', student.Student_Name)
                .replaceAll('[Preferred_Name]', student.Preferred_Name)
                .replaceAll('[Club]', student.Club_Name)
                .replaceAll('[Position]', student.Position);
        }

        function convToIcon(data) {
            return data === true ? '<i class="uis uis-check-circle"></i>' : '<i class="uis uis-times-circle"></i>';
        }

        // Returns a list of columns to hide based on the width of the screen
        function getColumnsToHide() {
            if ($(window).width() < 1200) {
                return [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14];
            }
            else {
                return [1, 2, 4, 5, 7, 8, 13, 14];
            }
        }
    </script>
}